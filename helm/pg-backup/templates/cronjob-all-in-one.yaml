{{- if eq .Values.global.backupType "allInOne" -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "pg-backup.fullname" . }}-all-in-one
  labels: {{ include "pg-backup.labels" . | nindent 4  }}
  namespace: {{ include "pg-backup.namespace" . }}
spec:
  schedule: {{ .Values.global.schedule | quote }}
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
        {{ if .Values.image.pullSecrets }}
          imagePullSecrets:
          {{ range .Values.image.pullSecrets }}
            - name: {{ . }}
          {{ end }}
        {{ end }}
          restartPolicy: Never
          containers:
          - name: {{ .Chart.Name }}
            image: avidcloud/pg-backup-zen:latest
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            command: ["sh", "-c", "/scripts/pg-backup.sh"]
            env:
            - name: DB_HOST
              value: {{ .Values.allInOne.hostname }}
            {{ if .Values.global.charset }}
            - name: DB_CHARSET
              value: {{ .Values.global.charset }}
            {{ end }}
            {{ if .Values.allInOne.username }}
            - name: DB_USERNAME
              value: {{ .Values.allInOne.username }}
            {{ else }}
            - name: DB_USERNAME
              value: postgres
            {{ end }}
            envFrom:
            - secretRef:
                name: {{ .Values.backupUpload.s3BackupSecretName }}
            resources:
{{ toYaml .Values.resources | indent 14 }}
            volumeMounts:
            - name: scripts
              mountPath: /scripts
              readOnly: true
            - name: secret-key
              mountPath: /etc/gcloud
              readOnly: true
          volumes:
          - name: scripts
            configMap:
              name: {{ include "pg-backup.fullname" . }}
              defaultMode: 0555
          - name: secret-key
            secret:
              secretName: {{ include "pg-backup.fullname" . }}-gcs
{{- end -}}