---
# Source: backup-zen/templates/namespace.yml
apiVersion: v1
kind: Namespace
metadata: 
  name: db-backups
  labels: 
    app.kubernetes.io/name: backup-zen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: backup-zen-1.0.0
---
# Source: backup-zen/templates/backup-creds-secret.yml
apiVersion: v1
kind: Secret
metadata:
  name: backup-zen-release-name-backup-creds
  labels: 
    app.kubernetes.io/name: backup-zen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: backup-zen-1.0.0
  namespace: db-backups
data:
  creds.json: W3siZGF0YWJhc2VfbmFtZSI6ImRiMSIsInBhc3N3b3JkIjoicGFzc3dvcmQxIiwidXNlcm5hbWUiOiJ1c2VyMSJ9LHsiZGF0YWJhc2VfbmFtZSI6ImRiMiIsInBhc3N3b3JkIjoicGFzc3dvcmQyIiwidXNlcm5hbWUiOiJ1c2VyMiJ9XQ==
type: Opaque
---
# Source: backup-zen/templates/objectStorage-secret.yml
apiVersion: v1
kind: Secret
metadata:
  name: backup-zen-release-name-object-storage-creds
  labels: 
    app.kubernetes.io/name: backup-zen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: backup-zen-1.0.0
  namespace: db-backups
data:
  MINIO_ACCESS_KEY_ID: YWNjZXNzLWtleQ==
  MINIO_URL: aHR0cHM6Ly9sb2NhbGhvc3Q=
  MINIO_SECRET_ACCESS_KEY: c2VjcmV0
  BUCKET_NAME: YmFja3VwemVuLW1pbmlv
  OBJECT_NAME: YzM0MmpoYzM0Z2Y=
type: Opaque
---
# Source: backup-zen/templates/backup-config-configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-zen-release-name-backup-config
  labels: 
    app.kubernetes.io/name: backup-zen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: backup-zen-1.0.0
  namespace: db-backups
data:
  DB_HOST: "mydb.rds.amazonaws.com"
  DB_PORT: "54325"
  TEAMS_NOTIFICATION: "true"
  DAYS_TO_KEEP: "5"
  DAY_OF_WEEK_TO_KEEP: "5"
  WEEKS_TO_KEEP: "7"
  FAILED_TEAMS_URL: "https://myorg.webhook.office.com/webhookb2/blob-blob-blob"
  SUCCEEDED_TEAMS_URL: "https://myorg.webhook.office.com/webhookb2/blob-blob-blob"
---
# Source: backup-zen/templates/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mydb-backup
  namespace: db-backups
  labels: 
    app.kubernetes.io/name: backup-zen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: backup-zen-1.0.0

spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
  volumeMode: Filesystem
---
# Source: backup-zen/templates/cronjob.yml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-zen-release-name
  namespace: db-backups
spec:
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - args:
              - /app/pg_backup_rotated.sh
              envFrom:
                - configMapRef:
                    name: backup-zen-release-name-backup-config
                - secretRef:
                    name: backup-zen-release-name-backup-creds
              env:
                - name: BACKUP_DIR
                  value: /backups
                - name: KUBERNETES_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
              image: mrezachalak/pg-backup-zen:12.1
              imagePullPolicy: Always
              name: dumper
              resources: {}
              volumeMounts:
                - mountPath: /backups
                  name: backups
                - mountPath: /app/creds.json
                  subPath: creds.json
                  name: credentials
                  readOnly: true
                
          containers:
            - command:
              - "bash"
              - "-c"
              args:  
                - >
                  mc alias set backupUploader $(MC_ENDPOINT) $(MC_ACCESS_KEY) $(MC_SECRET_KEY) && mc mirror --remove /backups backupUploader/$(OBJECT_NAME)/backup-zen-release-name/ && curl -H 'Content-Type: application/json' -d '{"title": "MongoDB Backups have been successfully synchronized with the Bucket.","text":"<pre>Pod name: $(KUBERNETES_POD_NAME)\nHost Address: $(DB_HOST)</pre>"}' $(SUCCEEDED_TEAMS_URL) || curl -H 'Content-Type: application/json' -d '{"title": "MongoDB Backups failed to synchronize with the bucket.","text":"<pre>Pod name: $(KUBERNETES_POD_NAME)\nHost Address: $(DB_HOST)</pre>"}' $(FAILED_TEAMS_URL)
              envFrom:
                - configMapRef:
                    name: backup-zen-release-name-backup-config
                - secretRef:
                    name: backup-zen-release-name-object-storage-creds
              env:
                - name: BACKUP_DIR
                  value: /backups
                - name: KUBERNETES_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
              image: mrezachalak/pg-backup-zen:12.1
              imagePullPolicy: Always
              name: uploader
              resources:
                requests:
                  cpu: "1"
                  memory: 1Gi
                limits:
                  cpu: "2"
                  memory: 2Gi
              volumeMounts:
                - mountPath: /backups
                  name: backups
          imagePullSecrets: []
          restartPolicy: Never
          terminationGracePeriodSeconds: 30
          volumes:
            - name: backups
              persistentVolumeClaim:
                claimName: mydb-backup
            - name: credentials
              secret:
                defaultMode: 0400
                items:
                  - key: creds.json
                    path: creds.json
                secretName: backup-zen-release-name-backup-creds
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  schedule: 0 0 * * *
  successfulJobsHistoryLimit: 3
